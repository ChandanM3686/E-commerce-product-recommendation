# -*- coding: utf-8 -*-
"""E-commerce product recommendation

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NFMZLqWSilToiMIQ4GrpeHpG7QX8QeEo
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from surprise import Reader, Dataset, SVD
from surprise.model_selection import cross_validate

df= pd.read_csv('/content/Reviews.csv',on_bad_lines='skip',engine='python')

df.head(5)

df.isnull().any()

from surprise import Dataset, Reader, SVD
from surprise.model_selection import train_test_split
from surprise import accuracy

data_filtered = df[['UserId', 'ProductId', 'Score']].dropna()

reader = Reader(rating_scale=(1, 5))
surprise_data = Dataset.load_from_df(data_filtered[['UserId', 'ProductId', 'Score']], reader)
trainset, testset = train_test_split(surprise_data, test_size=0.2)

model = SVD()

model.fit(trainset)
predictions = model.test(testset)
rmse = accuracy.rmse(predictions)

print(f"RMSE of the SVD model: {rmse}")

user_id = "A3SGXH7AUHU8GW	"
product_id = "B001E4KFG0"
prediction = model.predict(user_id, product_id)
print(f"Predicted rating for user {user_id} on product {product_id} is {prediction.est:.2f}")

def get_top_n_recommendations(model, user_id, data, n=10):

    all_product_ids = df['ProductId'].unique()
    rated_products = df[df['UserId'] == user_id]['ProductId'].unique()
    products_to_predict = [pid for pid in all_product_ids if pid not in rated_products]
    predictions = [model.predict(user_id, pid) for pid in products_to_predict]
    top_n = sorted(predictions, key=lambda x: x.est, reverse=True)[:n]
    return [(pred.iid, pred.est) for pred in top_n]
top_n_recommendations = get_top_n_recommendations(model, user_id="A1B2C3", data=df, n=5)
print("Top N recommendations:", top_n_recommendations)

